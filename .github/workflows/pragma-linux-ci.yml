name: Build Linux
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: environment-lin-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            name: "Ubuntu GCC-11"
            artifact: "ubuntu_gcc.7z"
            build_type: "RelWithDebInfo"
            cc: "clang-14"
            cxx: "clang++-14"
            archiver: "7z a"
            generators: "Unix Makefiles"
            build_dir: 'build'
    steps:
      - name: Install Blender dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install build-essential git subversion cmake libx11-dev libxxf86vm-dev libxcursor-dev libxi-dev libxrandr-dev libxinerama-dev libegl-dev
          sudo apt install libwayland-dev wayland-protocols libxkbcommon-dev libdbus-1-dev linux-libc-dev
          mkdir ~/blender-git
          cd ~/blender-git
          git clone https://git.blender.org/blender.git
          cd ~/blender-git
          #sudo sh ./blender/build_files/build_environment/install_deps.sh --with-embree
          # The above doesn't work, so we'll have to use a workaround
          sed 's/^# Args Handling.*/# Args Handling\nWITH_EMBREE=true/g' ./blender/build_files/build_environment/install_deps.sh | tee ./blender/build_files/build_environment/install_deps2.sh
          sudo bash ./blender/build_files/build_environment/install_deps2.sh
          
      - name: Build Blender
        shell: bash
        run: |
          cd ~/blender-git/blender
          make update
          #make bpy BUILD_CMAKE_ARGS=" -D LLVM_CONFIG=/usr/bin/llvm-config-14 -D LLVM_LIBPATH=/usr/lib/llvm-14/lib -D LLVM_ROOT_DIR=/usr/lib/llvm-14.0 -D LLVM_STATIC=OFF -D LLVM_VERSION=14.0"
          cd ..
          mkdir build
          mkdir install
          cd build
          cmake ../blender -DCMAKE_INSTALL_PREFIX=../install/site-packages -DWITH_PYTHON_INSTALL=OFF -DWITH_PLAYER=OFF -DWITH_PYTHON_MODULE=ON -DWITH_AUDASPACE=OFF -DLLVM_CONFIG=/usr/bin/llvm-config-14 -DLLVM_LIBPATH=/usr/lib/llvm-14/lib -DLLVM_ROOT_DIR=/usr/lib/llvm-14.0 -DLLVM_STATIC=OFF -DLLVM_VERSION=14.0
          make
          make install
          # see https://gist.github.com/keunhong/279c98de28877a3a33a1eb95fa7d56a5

      - name: Create Release Files
        shell: bash
        run: |
          mkdir release
          rsync -r /home/runner/blender-git/install/ release
          
          rsync --ignore-missing-args /opt/lib/blosc/lib/libblosc.so release/
          rsync --ignore-missing-args --links /opt/lib/blosc/lib/libblosc.so.1 release/
          rsync --ignore-missing-args /opt/lib/openexr/lib/libIex-3_1.so release/
          rsync --ignore-missing-args --links /opt/lib/openexr/lib/libIex-3_1.so.30 release/
          rsync --ignore-missing-args /opt/lib/openexr/lib/libIlmThread-3_1.so release/
          rsync --ignore-missing-args --links /opt/lib/openexr/lib/libIlmThread-3_1.so.30 release/
          rsync --ignore-missing-args /opt/lib/ocio/lib/libOpenColorIO.so release/
          rsync --ignore-missing-args --links /opt/lib/ocio/lib/libOpenColorIO.so.2.1 release/
          rsync --ignore-missing-args /opt/lib/openexr-3.1/lib/libOpenEXR-3_1.so release/
          rsync --ignore-missing-args --links /opt/lib/openexr-3.1/lib/libOpenEXR-3_1.so.30 release/
          rsync --ignore-missing-args /opt/lib/openexr-3.1/lib/libOpenEXRCore-3_1.so release/
          rsync --ignore-missing-args --links /opt/lib/openexr-3.1/lib/libOpenEXRCore-3_1.so.30 release/
          rsync --ignore-missing-args /opt/lib/oiio/lib/libOpenImageIO.so release/
          rsync --ignore-missing-args --links /opt/lib/oiio/lib/libOpenImageIO.so.2.3 release/
          rsync --ignore-missing-args /opt/lib/oiio/lib/libOpenImageIO_Util.so release/
          rsync --ignore-missing-args --links /opt/lib/oiio/lib/libOpenImageIO_Util.so.2.3 release/
          rsync --ignore-missing-args /opt/lib/openvdb/lib/libopenvdb.so release/
          rsync --ignore-missing-args --links /opt/lib/openvdb/lib/libopenvdb.so.9.0 release/
          rsync --ignore-missing-args /opt/lib/osd/lib/libosdCPU.so release/
          rsync --ignore-missing-args --links /opt/lib/osd/lib/libosdCPU.so-3.4.4 release/
          rsync --ignore-missing-args /opt/lib/osd/lib/libosdGPU.so release/
          rsync --ignore-missing-args --links /opt/lib/osd/lib/libosdGPU.so-3.4.4 release/
          rsync --ignore-missing-args /opt/lib/osl/lib/liboslcomp.so release/
          rsync --ignore-missing-args --links /opt/lib/osl/lib/liboslcomp.so.1.12 release/
          rsync --ignore-missing-args /opt/lib/osl/lib/liboslexec.so release/
          rsync --ignore-missing-args --links /opt/lib/osl/lib/liboslexec.so.1.12 release/
          rsync --ignore-missing-args /opt/lib/osl/lib/liboslnoise.so release/
          rsync --ignore-missing-args --links /opt/lib/osl/lib/liboslnoise.so.1.12 release/
          rsync --ignore-missing-args /opt/lib/osl/lib/liboslquery.so release/
          rsync --ignore-missing-args --links /opt/lib/osl/lib/liboslquery.so.1.12 release/
          rsync --ignore-missing-args /opt/lib/tbb/lib/libtbb.so release/
          rsync --ignore-missing-args --links /opt/lib/tbb/lib/libtbbmalloc.so release/
          rsync --ignore-missing-args /opt/lib/usd/lib/libusd_usd_ms.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libhpdf-2.3.0.so release/
          rsync --ignore-missing-args /lib/x86_64-linux-gnu/libImath-3_1.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libImath-3_1.so.29 release/
          rsync --ignore-missing-args /lib/x86_64-linux-gnu/libjemalloc.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libjemalloc.so.2 release/
          rsync --ignore-missing-args /lib/x86_64-linux-gnu/libpotrace.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libpotrace.so.0 release/
          rsync --ignore-missing-args /lib/x86_64-linux-gnu/libpystring.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libpystring.so.0 release/
          rsync --ignore-missing-args /lib/x86_64-linux-gnu/libyaml-cpp.so release/
          rsync --ignore-missing-args --links /lib/x86_64-linux-gnu/libyaml-cpp.so.0.7 release/
          
      #- uses: mxschmitt/action-tmate@v3.13
      #  name: CI
          
      #- name: Install
      #  shell: bash
      #  run: |
      #    
      #    #WITH_INSTALL_PORTABLE=ON
      #    #CMAKE_INSTALL_PREFIX=./release/site-packages
      #    #make install
          
      - name: Create Release Files
        shell: bash
        id: generate-archive
        run: |
          cd release
          if [ "$RUNNER_OS" == "Linux" ]; then
            archiveName=binaries_linux64.tar.gz
            tar -czvf $archiveName *
          else
            archiveName=binaries_windows64.zip
            tar -cvf $archiveName *
          fi
          mv $archiveName ../$archiveName
          echo "::set-output name=archive-name::$archiveName"
          
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ steps.generate-archive.outputs.archive-name }}"
          body: "Automatically generated binaries."
          commit: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          replacesArtifacts: true
          allowUpdates: true
          
      #- name: Release Binaries
      #  uses: Silverlan/common_actions/release_nightly_binaries@main
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    commit: ${{ github.ref_name }}
      #    update_tag: '0'

      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
        
